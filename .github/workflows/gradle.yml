# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: create develop yml file
      run: |
        touch src/main/resources/application-aws.properties
        echo "${{ secrets.ENV_DEV }}" >> src/main/resources/application-dev.yml
    - name: create production yml file
      run: |
        touch src/main/resources/application-oauth.properties
        echo "${{ secrets.ENV_PROD }}" >> src/main/resources/application-prod.yml
    - name: create test yml file
      run: |
        touch src/main/resources/application-oauth.properties
        echo "${{ secrets.ENV_TEST }}" >> src/test/resources/application-test.yml
        
    # Gradle wrapper 파일 실행 권한주기
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # Gradle test를 실행한다
    - name: Test with Gradle
      run: ./gradlew --info test
    
    # 테스트 후 Result를 보기위해 Publish Unit Test Results step 추가
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: ${{ always() }}  # 테스트가 실패하여도 Report를 보기 위해 `always`로 설정
      with:
        files: build/test-results/**/*.xml
